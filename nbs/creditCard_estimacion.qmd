---
title: "Emparejamiento: estimación del efecto causal"
subtitle: "Aproximaciones para estimar efectos causales tras matching"
format: 
  html:
    embed-resources: true
    toc: true
    toc_float: yes
    theme: cosmo
editor: source
execute: 
  warning: false
lang: es
---

## Definición del problema

Carga de datos y librerías:

```{r}
library(MatchIt)
library(cobalt)

source("https://juandmontoro.github.io/icml/nbs/procesar.R")

```

Descripción de las variables: 

1. `limite_bal`: límite tarjeta. 
2. `género`: género (1 = hombre; 2 = mujer). 
3. `edu`: nivel de educación (1 = graduate school; 2 = university; 3 = high school; 4 = others).  
4. `ecivil`: estado civil (1 = married; 2 = single; 3 = others).  
5. `edad`: edad.  
6. `importeAbril` importe liquidación en abril de 2005.  
7. `tratamiento`: impago mes de abril de 2005. 
8. `respuesta`: impago mes de septiembre de 2005.  
(Todos los importes monetarios en dólares NT.)

> Q:  ¿Como afecta el impago de la liquidación en Abril de 2005 (tratamiento) al impago en Septiembre de 2005 (respuesta)? 



A partir de las medias para tratados y no tratados podemos ver el grado de asociación entre tratamiento y respuesta:

```{r}
impago %>% 
  group_by(tratamiento) %>% 
  summarise(proporcion_impago_sept=mean(respuesta))
```

```{r echo=FALSE}
# definiciones de proporciones observadas en la muestra
# proporción impagos sept para tratados
p1 = round(mean(impago[impago$tratamiento==1,"respuesta"]),2)
# proprocion impagos sept para no tratados
p0 = round(mean(impago[impago$tratamiento==0,"respuesta"]),2)

```


Podemos estimar el efecto como la diferencia de riesgos (probabilidades) muestrales, si bien si existe confusión la estimación será sesgada. En el caso analizado la diferencia de riesgo es $dim =$ `r p1`- `r p0` = `r p1-p0`

## Emparejamiento usando la propensión al tratamiento (PS)

Comenzamos usando un emparejamiento por NN con la distancia definida por el PS (ejemplo 1 del documento anterior).  

### Emparejamiento

```{r}
m.ps <- matchit(tratamiento ~ .-respuesta,
                  method="nearest",
                  distance="glm",
                  data=impago) 

```


```{r}
m.ps
```


### Equilibrio

Veamos que se cumple el equilibrio en variables de confusión:

```{r}
bal.tab(m.ps,stats = c("m","var","ks"),
        thresholds=c(m=0.1,ks=0.05,var=2), 
        un=TRUE)
```

```{r}
love.plot(m.ps,stats = c("m","var","ks"), 
          abs = TRUE,thresholds=c(m=0.1,ks=0.05,var=2),
          stars = "std")
```

### Generación muestra pareada 

Tras la evaluación del equilibrio podemos generar conjunto de datos tras emparejamiento:

```{r}
m.data <- match.data(m.ps)
```

## Estimación del efecto causal

A partir de la muestra pareada tenemos diferentes alternativas para estimar el efecto causal deseado. En nuestro caso el estimando es ATT (ya que hemos emparejado unidades tratadas con unidades no tratadas similares en variables de confusión).

### Estimación ATT por diferencia de medias

Podemos utilizar la muestra emparejada para estimar el efecto 
causal como diferencia de medias. En este caso (recordemos que respuesta es dicotómica) 
recuperamos la diff. de riesgo:

```{r}
m.data %>% 
  group_by(tratamiento) %>% 
  summarise(mean(respuesta))

p1 <- mean(m.data[m.data$tratamiento==1,"respuesta"]) %>% round(2)
p0 <- mean(m.data[m.data$tratamiento==0,"respuesta"]) %>% round(2)

p1-p0
```

No obstante necesitamos estimar correctamente los errores estándar. Procedemos a estimarlos empíricamente por bootstrapping:

```{r}

library(boot)
estimador <- function(datos,index = 1:nrow(datos)){
    # Applicamos el índice de bootstrap
  datos <- datos %>% slice(index)
  # Estimación de la diferencia
  w_means <- datos %>% 
    group_by(tratamiento) %>%
    summarize(m = weighted.mean(respuesta, w = weights)) %>%
    arrange(tratamiento)
  return(w_means$m[2] - w_means$m[1])

}

resultado <- boot(m.data,statistic = estimador,1000)
boot.ci(resultado,type=c("bca"))
```


### Estimación ATT a través de un enfoque paramétrico

En este caso usamos un modelo lineal generalizado con respuesta binaria. 
A pesar de que el matching debe haber eliminado la influencia de las variables de 
confusión es recomendable (no necesario) incluir en la regresión no solo el tratamiento sino todos los controles y las interacciones (e incluso el PS). De esta forma se eliminan desequilibrios residuales en la distribución de variables de control (es decir, reduccimos el sesgo) y aumentan la precisión de la estimación..

Además este enfoque hace que el efecto estimado sea **doblemente robusto**, es decir, 
consistente solo con que una de las especificaciones (la del propensity score o la 
del modelo para la respuesta) sea correcta.

```{r}
# fórmula para el modelo paramétrico
vars <- setdiff(names(m.data), c("respuesta","tratamiento","weights","subclass","distance"))  
rhs <- paste0("(", paste(vars, collapse = " + "), ")") 
fml <- as.formula(paste("respuesta ~ tratamiento*", rhs))   

modelo <- lm(fml,
             data=m.data, 
             weights = weights)

summary(modelo)
confint(modelo)
```


### Estimación ATT 3: g-fórmula

La *g-fórmula* o *g-computación* implica tres pasos: 

1. Especificar un modelo para el resultado como función del tratamiento y las covariables.
2. Para cada unidad en el conjunto de datos emparejado, obtenemos la predicción de la respuesta para los dos estados de tratamiento (tratado y como control). Ello produce dos predicciones para cada unidad que son estimaciones de los resultados potenciales bajo cada nivel de tratamiento. Calculando la media de cada uno de los resultados potenciales estimados para toda la muestra nos deja con dos resultados potenciales estimados promedio.  
3. Finalmente, el contraste de estos resultados potenciales estimados promedio (por ejemplo, su diferencia o ratio, dependiendo de la medida del efecto deseada) es la estimación del efecto del tratamiento.

Veamos detalladamente.

#### Paso 1: estimación del modelo paramétrico

Ya estimado anteriormente:

```{r}
summary(modelo)
```

#### Paso 2: estimación de los resultados potenciales medios

Generamos predicciones para unidades tratadas usando el modelo anterior. Al tratarse de estimación de ATT solo se estiman resultados potenciales en el grupo de tratados. Si el estimando fuera ATU solo estimamos resultados potenciales en grupo no tratados. Si ATE, en todos.

```{r}
library(marginaleffects)
pred.gformula <- predictions(modelo,
                         variables = "tratamiento", 
                         # variable para la que generar contrafactuales
                         vcov = ~subclass,   # estimacion robusta de se
                         newdata = subset(m.data, tratamiento == 1), # ATT: filtramos solo tratados
                         wts = "weights", 
                         by="tratamiento") # variable de agregación 
pred.gformula
```

#### Paso 3: estimación del efecto causal (diferencia de resultados potenciales)

Finalmente estimamos el efecto causal como diferencia de los resultados potenciales. El caso más habitual será contrastar la diferencia de medias de la respuesta (en el caso que nos ocupa estimamos el efecto causal como diferencia de riesgo de impago en septiembre):

```{r}
avg_comparisons(modelo,variables = "tratamiento",
                vcov = ~subclass,   # estimacion robusta de se
                newdata = subset(m.data, tratamiento == 1),
                wts = "weights")
```

## Vuestro turno: estimación del ATE

Instrucciones:

1. Para recuperar el ATE debemos emparejar toda la muestra: ello exige utilizar el 
argumento `estimand="ATE"` en la llamada a `matchit`.  
2. Seleccionar un método de emparejamiento adecuado (no todos los métodos lo son): los métodos `full` o  `quick` (versión más eficiente computacionalmente) son adecuados.  
3. Evaluar el equilibrio del PS y las variables de control.
4. Estimar el efecto usando la g-fórmula.
